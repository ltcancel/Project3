html_nodes("div") %>%
html_nodes(".ViewJob-description") %>%
html_text() %>%
as.character()
}
tab2
job_url_joined[2]
desc %>%
html_nodes("div") %>%
html_nodes(".ViewJob-description") %>%
html_text() %>%
as.character()
tab2
for(i in 1:length(job_url_joined)){
desc <- read_html(job_url_joined[i])
job_description[i] <- desc %>%
html_nodes("div") %>%
html_nodes(".ViewJob-description") %>%
html_text() %>%
as.character()
}
job_description <- as.character()
for(i in 1:length(job_url_joined)){
desc <- read_html(job_url_joined[i])
job_description[i] <- desc %>%
html_nodes("div") %>%
html_nodes(".ViewJob-description") %>%
html_text() %>%
as.character()
}
for(i in 1:length(job_url_joined)){
desc <- read_html(job_url_joined[i])
job_description[i] <- desc %>%
html_nodes("div") %>%
html_nodes(".ViewJob-description") %>%
html_text() %>%
as.character()
}
job_description
#build URL
site.pt1 <- "https://www.simplyhired.com/search?q=data+scientist&l=Brooklyn%2C+NY&pn="
site.pt2 <- "&job=FKql1P5_hBC1iuZNXkobdYwS3L8hYW8qlp10RE0p-U_OOFU210Cs4g"
pages = 2
url <- create_url(site.pt1, pages, site.pt2)
url <- str_c(site.pt1, pages, site.pt2)
url
?tibble()
?tibble
library(tidyverse)
?tibble
df <- tibble(job_title = job_title,
company = hiring_company,
location = location,
salary = salary,
company_rating = company_rating
posting_url = job_url_joined,
df <- tibble(job_title = job_title,
company = hiring_company,
location = location,
salary = salary,
company_rating = company_rating,
posting_url = job_url_joined,
description = job_description)
df <- tibble(job_title = job_title,
company = hiring_company,
location = location,
salary = salary,
posting_url = job_url_joined,
description = job_description)
df
df <- as_tribble()
df <- as_tibble()
pages = 2
df <- as_tibble()
for(j in 1:length(job_url_joined)){
desc <- read_html(job_url_joined[j])
job_description[j] <- desc %>%
html_nodes("div") %>%
html_nodes(".ViewJob-description") %>%
html_text() %>%
as.character()
}
job_description
for (i in 1:pages){
#create URL for each page
url <- str_c(site.pt1, page_num = i, site.pt2)
#read URL data
listings <- read_html(url)
job_title <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_text()
hiring_company <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-company") %>%
html_text()
location <- listings %>%
html_nodes("div") %>%
html_nodes('[itemprop="address"]') %>%
html_text()
salary <- listings %>%
html_nodes("div") %>%
html_nodes('.SerpJob-metaInfo') %>%
html_text()
job_url <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_nodes("a") %>%
html_attr("href") %>%
as.character()
job_url_joined <- str_c("https://www.simplyhired.com",job_url)
df <- add_row(job_title, hiring_company, location, salary, job_url_joined, job_description)
}
df <-
?data_frame
df <-
?data_frame
df <- as.data_frame()
df <- data_frame()
df <- as.tibble()
df <- as_tibble()
df <- as_tibble()
for (i in 1:pages){
#create URL for each page
url <- str_c(site.pt1, page_num = i, site.pt2)
#read URL data
listings <- read_html(url)
job_title <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_text()
hiring_company <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-company") %>%
html_text()
location <- listings %>%
html_nodes("div") %>%
html_nodes('[itemprop="address"]') %>%
html_text()
salary <- listings %>%
html_nodes("div") %>%
html_nodes('.SerpJob-metaInfo') %>%
html_text()
job_url <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_nodes("a") %>%
html_attr("href") %>%
as.character()
job_url_joined <- str_c("https://www.simplyhired.com",job_url)
if(i==1){
df <- tibble(job_title, hiring_company, location, salary, job_url_joined, job_description)
}
else{
df <- add_row(job_title, hiring_company, location, salary, job_url_joined, job_description)
}
}
df <- tibble(job_title, hiring_company, location, salary, job_url_joined, job_description)
df
for (i in 1:pages){
#create URL for each page
url <- str_c(site.pt1, page_num = i, site.pt2)
#read URL data
listings <- read_html(url)
job_title <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_text()
hiring_company <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-company") %>%
html_text()
location <- listings %>%
html_nodes("div") %>%
html_nodes('[itemprop="address"]') %>%
html_text()
salary <- listings %>%
html_nodes("div") %>%
html_nodes('.SerpJob-metaInfo') %>%
html_text()
job_url <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_nodes("a") %>%
html_attr("href") %>%
as.character()
job_url_joined <- str_c("https://www.simplyhired.com",job_url)
if(i==1){
df <- tibble(job_title, hiring_company, location, salary, job_url_joined, job_description)
}
else{
df <- add_row(job_title, hiring_company, location, salary, job_url_joined, job_description)
}
}
?tibble
for (i in 1:pages){
#create URL for each page
url <- str_c(site.pt1, page_num = i, site.pt2)
#read URL data
listings <- read_html(url)
job_title <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_text()
hiring_company <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-company") %>%
html_text()
location <- listings %>%
html_nodes("div") %>%
html_nodes('[itemprop="address"]') %>%
html_text()
salary <- listings %>%
html_nodes("div") %>%
html_nodes('.SerpJob-metaInfo') %>%
html_text()
job_url <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_nodes("a") %>%
html_attr("href") %>%
as.character()
job_url_joined <- str_c("https://www.simplyhired.com",job_url)
if(i==1){
df <- tibble(job_title, hiring_company, location, salary, job_url_joined, job_description)
}
else{
df <- add_row(df, job_title, hiring_company, location, salary, job_url_joined, job_description)
}
}
df
View(df)
View(df2)
rm(df)
for (i in 1:pages){
#create URL for each page
url <- str_c(site.pt1, page_num = i, site.pt2)
#read URL data
listings <- read_html(url)
job_title <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_text()
hiring_company <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-company") %>%
html_text()
location <- listings %>%
html_nodes("div") %>%
html_nodes('[itemprop="address"]') %>%
html_text()
salary <- listings %>%
html_nodes("div") %>%
html_nodes('.SerpJob-metaInfo') %>%
html_text()
job_url <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_nodes("a") %>%
html_attr("href") %>%
as.character()
job_url_joined <- str_c("https://www.simplyhired.com",job_url)
if(i==1){
df <- tibble(job_title, hiring_company, location, salary, job_url_joined, job_description)
}
else{
df <- add_row(df, job_title, hiring_company, location, salary, job_url_joined, job_description)
}
}
View(df)
rm(df)
rm(job_description)
for (i in 1:pages){
#create URL for each page
url <- str_c(site.pt1, page_num = i, site.pt2)
#read URL data
listings <- read_html(url)
job_title <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_text()
hiring_company <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-company") %>%
html_text()
location <- listings %>%
html_nodes("div") %>%
html_nodes('[itemprop="address"]') %>%
html_text()
salary <- listings %>%
html_nodes("div") %>%
html_nodes('.SerpJob-metaInfo') %>%
html_text()
job_url <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_nodes("a") %>%
html_attr("href") %>%
as.character()
job_url_joined <- str_c("https://www.simplyhired.com",job_url)
if(i==1){
df <- tibble(job_title, hiring_company, location, salary, job_url_joined, job_description)
}
else{
df <- add_row(df, job_title, hiring_company, location, salary, job_url_joined, job_description)
}
}
for(i in 1:length(job_url_joined)){
desc <- read_html(job_url_joined[i])
job_description[i] <- desc %>%
html_nodes("div") %>%
html_nodes(".ViewJob-description") %>%
html_text() %>%
as.character()
}
job_description <- as.character()
for (i in 1:pages){
#create URL for each page
url <- str_c(site.pt1, page_num = i, site.pt2)
#read URL data
listings <- read_html(url)
#pull necessary data from each page
job_title <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_text()
hiring_company <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-company") %>%
html_text()
location <- listings %>%
html_nodes("div") %>%
html_nodes('[itemprop="address"]') %>%
html_text()
salary <- listings %>%
html_nodes("div") %>%
html_nodes('.SerpJob-metaInfo') %>%
html_text()
job_url <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_nodes("a") %>%
html_attr("href") %>%
as.character()
job_url_joined <- str_c("https://www.simplyhired.com",job_url)
#second loop to get job description for each job posted on each page
for(j in 1:length(job_url_joined)){
desc <- read_html(job_url_joined[j])
job_description[j] <- desc %>%
html_nodes("div") %>%
html_nodes(".ViewJob-description") %>%
html_text() %>%
as.character()
}
if(i==1){
df <- tibble(job_title, hiring_company, location, salary, job_url_joined, job_description)
}
else{
df <- add_row(df, job_title, hiring_company, location, salary, job_url_joined, job_description)
}
}
df
pages = 10
for (i in 1:pages){
#create URL for each page
url <- str_c(site.pt1, page_num = i, site.pt2)
#read URL data
listings <- read_html(url)
#pull necessary data from each page
job_title <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_text()
hiring_company <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-company") %>%
html_text()
location <- listings %>%
html_nodes("div") %>%
html_nodes('[itemprop="address"]') %>%
html_text()
salary <- listings %>%
html_nodes("div") %>%
html_nodes('.SerpJob-metaInfo') %>%
html_text()
job_url <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_nodes("a") %>%
html_attr("href") %>%
as.character()
job_url_joined <- str_c("https://www.simplyhired.com",job_url)
#second loop to get job description for each job posted on each page
for(j in 1:length(job_url_joined)){
desc <- read_html(job_url_joined[j])
job_description[j] <- desc %>%
html_nodes("div") %>%
html_nodes(".ViewJob-description") %>%
html_text() %>%
as.character()
}
if(i==1){
df <- tibble(job_title, hiring_company, location, salary, job_url_joined, job_description)
}
else{
df <- add_row(df, job_title, hiring_company, location, salary, job_url_joined, job_description)
}
}
df
View(df)
head(df)
for (i in 1:pages){
#create URL for each page - 10 pages total
url <- str_c(site.pt1, page_num = i, site.pt2)
#read URL data
listings <- read_html(url)
#pull necessary data from each page
job_title <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_text()
hiring_company <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-company") %>%
html_text()
location <- listings %>%
html_nodes("div") %>%
html_nodes('[itemprop="address"]') %>%
html_text()
salary <- listings %>%
html_nodes("div") %>%
html_nodes('.SerpJob-metaInfo') %>%
html_text()
job_url <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_nodes("a") %>%
html_attr("href") %>%
as.character()
#add beginning of main URL to job_url to create a useable URL for the FOR loop
job_url_joined <- str_c("https://www.simplyhired.com",job_url)
#second loop to get job description for each job posted on each page
for(j in 1:length(job_url_joined)){
desc <- read_html(job_url_joined[j])
job_description[j] <- desc %>%
html_nodes("div") %>%
html_nodes(".ViewJob-description") %>%
html_text() %>%
as.character()
}
if(i==1){
df_simplyhired <- tibble(job_title, hiring_company, location, salary, job_url_joined, job_description)
}
else{
df_simplyhired <- add_row(df, job_title, hiring_company, location, salary, job_url_joined, job_description)
}
}
head(df_simplyhired)
setwd("~/Data 607/Project 3")
write.csv(df_simplyhired, file = "SimplyHiredJobs.csv")
write.csv(df_simplyhired, file = "SimplyHiredJobs.csv", row.names = FALSE)
for (i in 1:pages){
#create URL for each page - 10 pages total
url <- str_c(site.pt1, page_num = i, site.pt2)
#read URL data
listings <- read_html(url)
#pull necessary data from each page
job_title <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_text()
hiring_company <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-company") %>%
html_text()
location <- listings %>%
html_nodes("div") %>%
html_nodes('[itemprop="address"]') %>%
html_text()
salary <- listings %>%
html_nodes("div") %>%
html_nodes('.SerpJob-metaInfo') %>%
html_text()
job_url <- listings %>%
html_nodes("div") %>%
html_nodes(".jobposting-title") %>%
html_nodes("a") %>%
html_attr("href") %>%
as.character()
#add beginning of main URL to job_url to create a useable URL for the FOR loop
job_url_joined <- str_c("https://www.simplyhired.com",job_url)
#second loop to get job description for each job posted on each page
for(j in 1:length(job_url_joined)){
desc <- read_html(job_url_joined[j])
job_description[j] <- desc %>%
html_nodes("div") %>%
html_nodes(".ViewJob-description") %>%
html_text() %>%
as.character()
}
if(i==1){
df_simplyhired <- tibble(job_title, hiring_company, location, salary, job_url_joined, job_description)
}
else{
df_simplyhired <- add_row(df, job_title, hiring_company, location, salary, job_url_joined, job_description)
}
}
head(df_simplyhired)
##Create csv file with all Data Scientist job postings scraped from www.simplyhired.com
write.csv(df_simplyhired, file = "SimplyHiredJobs.csv", row.names = FALSE)
##Create csv file with all Data Scientist job postings scraped from www.simplyhired.com
write.csv(df_simplyhired, file = "SimplyHiredJobs.csv", row.names = FALSE)
